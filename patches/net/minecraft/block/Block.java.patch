--- /net/minecraft/block
+++ /net/minecraft/block
@@ -192,7 +192,7 @@
 
 public class Block {
     private static final ResourceLocation AIR_ID = new ResourceLocation("air");
-    public static final RegistryNamespacedDefaultedByKey<ResourceLocation, Block> REGISTRY = new RegistryNamespacedDefaultedByKey(AIR_ID);
+    public static final xyz.openmodloader.registry.AutomaticDefaultedNamespacedRegistry<ResourceLocation, Block> REGISTRY = xyz.openmodloader.registry.Registries.register(Block.class, AIR_ID);
     public static final ObjectIntIdentityMap<IBlockState> BLOCK_STATE_IDS = new ObjectIntIdentityMap();
     public static final AxisAlignedBB FULL_BLOCK_AABB = new AxisAlignedBB(0.0D, 0.0D, 0.0D, 1.0D, 1.0D, 1.0D);
     public static final AxisAlignedBB NULL_AABB = null;
@@ -591,15 +591,20 @@
         if(!var1.isRemote) {
             int var6 = this.quantityDroppedWithBonus(var5, var1.rand);
 
+            java.util.List<ItemStack> drops = new java.util.ArrayList<>();
             for(int var7 = 0; var7 < var6; ++var7) {
                 if(var1.rand.nextFloat() <= var4) {
                     Item var8 = this.getItemDropped(var3, var1.rand, var5);
                     if(var8 != null) {
+                        drops.add(new ItemStack(var8, 1, this.damageDropped(var3)));
+                        if (false)
                         spawnAsEntity(var1, var2, new ItemStack(var8, 1, this.damageDropped(var3)));
                     }
                 }
             }
 
+            drops = xyz.openmodloader.event.impl.BlockEvent.HarvestDrops.handle(var1, var3, var2, var4, var5, drops);
+            for (ItemStack stack : drops) spawnAsEntity(var1, var2, stack);
         }
     }
 
@@ -709,13 +714,13 @@
     public void harvestBlock(World var1, EntityPlayer var2, BlockPos var3, IBlockState var4, @Nullable TileEntity var5, @Nullable ItemStack var6) {
         var2.addStat(StatList.getBlockStats(this));
         var2.addExhaustion(0.025F);
-        if(this.canSilkHarvest() && EnchantmentHelper.getEnchantmentLevel(Enchantments.SILK_TOUCH, var6) > 0) {
+        if(this.canSilkHarvest() && EnchantmentHelper.getEnchantmentLevel(Enchantments.SILK_TOUCH, var6, var2) > 0) {
             ItemStack var8 = this.createStackedBlock(var4);
             if(var8 != null) {
                 spawnAsEntity(var1, var3, var8);
             }
         } else {
-            int var7 = EnchantmentHelper.getEnchantmentLevel(Enchantments.FORTUNE, var6);
+            int var7 = EnchantmentHelper.getEnchantmentLevel(Enchantments.FORTUNE, var6, var2);
             this.dropBlockAsItem(var1, var3, var4, var7);
         }
 
